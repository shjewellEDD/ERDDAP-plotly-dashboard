{
  "src/lib/components/Notes.react.js": {
    "description": "Notes allows users to add text notes and drawings to an existing dash app",
    "displayName": "Notes",
    "methods": [
      {
        "name": "toggleAdd",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "findAnchor",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "left",
            "type": null
          },
          {
            "name": "right",
            "type": null
          },
          {
            "name": "top",
            "type": null
          },
          {
            "name": "bottom",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "newText",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{x, y}",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setText",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "edits",
            "type": null
          },
          {
            "name": "i",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setNewShape",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "pathData",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "normalizedPoint",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "startShape",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "updateShape",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "endShape",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "cancelShape",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderDrawings",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "drawings",
            "type": null
          },
          {
            "name": "adding",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "username": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The name we'll associate with any new entries added by the user."
      },
      "permission": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'view'",
              "computed": false
            },
            {
              "value": "'comment'",
              "computed": false
            },
            {
              "value": "'add'",
              "computed": false
            },
            {
              "value": "'self'",
              "computed": false
            },
            {
              "value": "'admin'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The commenting rights of the current user.\nview: only view existing notes, no changes allowed.\ncomment: add entries to existing text notes, but no adding new notes or\n  editing or deleting notes.\nadd: add new and comment on existing notes, but no editing or deleting.\nself: add and comment on notes, and edit or delete your own entries.\nadmin: edit or delete anyone's entries or notes.",
        "defaultValue": {
          "value": "'admin'",
          "computed": false
        }
      },
      "modes": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'draw'",
              "computed": false
            },
            {
              "value": "'text'",
              "computed": false
            },
            {
              "value": "'draw+text'",
              "computed": false
            },
            {
              "value": "''",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Allowed note types, as a flag list. Values are\n'draw', 'text', 'draw+text', or '' to disable / hide all notes.",
        "defaultValue": {
          "value": "'draw+text'",
          "computed": false
        }
      },
      "drawings": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "exact",
            "value": {
              "anchor_id": {
                "name": "string",
                "description": "The component ID this shape is associated with.\nIf omitted, this shape will be positioned relative to the page",
                "required": false
              },
              "points": {
                "name": "arrayOf",
                "value": {
                  "name": "arrayOf",
                  "value": {
                    "name": "arrayOf",
                    "value": {
                      "name": "number"
                    }
                  }
                },
                "description": "The points defining this shape. Should be an array of arrays of\nnumber pairs: [[[x, y], [x, y], ...], ...]\nx=0 is the left edge of the component (or page), x=1 is the right.\ny=0 is the top edge of the component (or page), y=1 is the bottom.\nx/y values are mostly between 0 and 1, but can extend beyond this.",
                "required": true
              }
            }
          }
        },
        "required": false,
        "description": "The drawings currently on the page",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "exact",
            "value": {
              "anchor_id": {
                "name": "string",
                "description": "The component ID this note is associated with.\nIf omitted, this note will be positioned relative to the page",
                "required": false
              },
              "x": {
                "name": "number",
                "description": "The horizontal position of the note anchor, from 0 to 1.\n0 is the left edge of the component (or page), 1 is the right edge.",
                "required": false
              },
              "y": {
                "name": "number",
                "description": "The vertical position of the note anchor, from 0 to 1.\n0 is the top edge of the component (or page), 1 is the bottom edge.",
                "required": false
              },
              "open": {
                "name": "bool",
                "description": "Is this note open?",
                "required": false
              },
              "entries": {
                "name": "arrayOf",
                "value": {
                  "name": "exact",
                  "value": {
                    "username": {
                      "name": "string",
                      "description": "The name of the user who made this comment",
                      "required": false
                    },
                    "edit_username": {
                      "name": "string",
                      "description": "The name of the user who last edited this comment, if any",
                      "required": false
                    },
                    "value": {
                      "name": "string",
                      "description": "The comment itself",
                      "required": true
                    }
                  }
                },
                "description": "The text comments associated with this note",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "The text notes currently on the page",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "quick_text": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Comments that can be inserted with a single click / tap.\nOnly empty comment boxes will show these options, not those with\nexisting entries."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      },
      "loading_state": {
        "type": {
          "name": "shape",
          "value": {
            "is_loading": {
              "name": "bool",
              "description": "Determines if the component is loading or not",
              "required": false
            },
            "prop_name": {
              "name": "string",
              "description": "Holds which property is loading",
              "required": false
            },
            "component_name": {
              "name": "string",
              "description": "Holds the name of the component that is loading",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Object that holds the loading state object coming from dash-renderer"
      }
    }
  }
}