# AUTO GENERATED FILE - DO NOT EDIT

from dash.development.base_component import Component, _explicitize_args


class Report(Component):
    """A Report component.
The parent component for describing a report.
The contents of this component should be a set of `ddk.Page` components.

**Example Usage**
```
app.layout = ddk.App([
    ddk.Report(display_page_numbers=True, children=[
        ddk.Page([
            html.H1('Quarterly Earnings'),
            ddk.Block(width=50, margin=5, children=[
                ddk.Graph(figure=px.scatter(
                    ddk.datasets.bubble(),
                    x='x1', y='y1'
                ))
            ]),
            ddk.Block(width=50, margin=5, children=[
                ddk.Graph(figure=px.scatter(
                    ddk.datasets.bubble(),
                    x='x2', y='y2'
                ))
            ]),

            html.H2('Expected Returns'),
            ddk.Block(width=50, margin=5, children=[
                ddk.Graph(figure=px.scatter(
                    ddk.datasets.bubble(),
                    x='x2', y='y2'
                ))
            ]),
            ddk.Block(width=50, margin=5, children=[
                ddk.Graph(figure=px.scatter(
                    ddk.datasets.bubble(),
                    x='x1', y='y1'
                ))
            ]),
            ddk.PageFooter("Past Performance Is No Guarantee of Future Results."),
        ]),
    ])
])
```

Keyword arguments:
- children (boolean | number | string | dict | list; optional): The list of components that are children of the PageFooter container.
These children should be of the type `ddk.Page`.
- style (dict; optional): Overrides the default (inline) styles for the this component.
- page_style (dict; optional): Overrides the default (inline) styles for all `ddk.Page` children
of this component.
- page_style_even (dict; optional): Overrides the default (inline) styles for all `ddk.Page` children
of this component with an even page number.
- page_style_odd (dict; optional): Overrides the default (inline) styles for all `ddk.Page` children
of this component with an odd page number.
- display_page_numbers (boolean; optional): Indicates whether to display page numbers for all `ddk.Page children
of this component.
- className (string; optional): Optional user-defined CSS class for the Report container.
- id (string; optional): The ID of this component, used to identify Dash components
in callbacks. The ID needs to be unique across all of the
components in an app.
- size (a value equal to: 'letter', 'legal', 'a4'; default 'letter'): The physical dimensions of the Page children of this Report container.
- orientation (a value equal to: 'vertical', 'horizontal'; default 'vertical'): The orientation of the Page children of this Report container.
- page_number_start_from (number; optional): The number to begin indexing the page count of the Page children
of this Report container.
- page_margin (dict; optional): Set the (left, right, top, bottom) margin dimensions
for all Page children of this Report container in units (`in`, `px`, `em`, etc.). page_margin has the following type: dict containing keys 'left', 'right', 'top', 'bottom'.
Those keys have the following types:
  - left (string; optional)
  - right (string; optional)
  - top (string; optional)
  - bottom (string; optional)
- page_margin_even (dict; optional): Set the (left, right, top, bottom) margin dimensions
for all Page children of this Report container in units (`in`, `px`, `em`, etc.)
with an even page number. page_margin_even has the following type: dict containing keys 'left', 'right', 'top', 'bottom'.
Those keys have the following types:
  - left (string; optional)
  - right (string; optional)
  - top (string; optional)
  - bottom (string; optional)
- page_margin_odd (dict; optional): Set the (left, right, top, bottom) margin dimensions
for all Page children of this Report container in units (`in`, `px`, `em`, etc.)
with an odd page number. page_margin_odd has the following type: dict containing keys 'left', 'right', 'top', 'bottom'.
Those keys have the following types:
  - left (string; optional)
  - right (string; optional)
  - top (string; optional)
  - bottom (string; optional)
- suppress_layout_exceptions (boolean; default False)"""
    @_explicitize_args
    def __init__(self, children=None, style=Component.UNDEFINED, page_style=Component.UNDEFINED, page_style_even=Component.UNDEFINED, page_style_odd=Component.UNDEFINED, display_page_numbers=Component.UNDEFINED, className=Component.UNDEFINED, id=Component.UNDEFINED, size=Component.UNDEFINED, orientation=Component.UNDEFINED, page_number_start_from=Component.UNDEFINED, page_margin=Component.UNDEFINED, page_margin_even=Component.UNDEFINED, page_margin_odd=Component.UNDEFINED, suppress_layout_exceptions=Component.UNDEFINED, **kwargs):
        self._prop_names = ['children', 'style', 'page_style', 'page_style_even', 'page_style_odd', 'display_page_numbers', 'className', 'id', 'size', 'orientation', 'page_number_start_from', 'page_margin', 'page_margin_even', 'page_margin_odd', 'suppress_layout_exceptions']
        self._type = 'Report'
        self._namespace = 'dash_design_kit'
        self._valid_wildcard_attributes =            []
        self.available_properties = ['children', 'style', 'page_style', 'page_style_even', 'page_style_odd', 'display_page_numbers', 'className', 'id', 'size', 'orientation', 'page_number_start_from', 'page_margin', 'page_margin_even', 'page_margin_odd', 'suppress_layout_exceptions']
        self.available_wildcard_properties =            []

        _explicit_args = kwargs.pop('_explicit_args')
        _locals = locals()
        _locals.update(kwargs)  # For wildcard attrs
        args = {k: _locals[k] for k in _explicit_args if k != 'children'}

        for k in []:
            if k not in args:
                raise TypeError(
                    'Required argument `' + k + '` was not specified.')
        super(Report, self).__init__(children=children, **args)
