# AUTO GENERATED FILE - DO NOT EDIT

from dash.development.base_component import Component, _explicitize_args


class CollapsibleMenu(Component):
    """A CollapsibleMenu component.
A leveled menu, meant to be included in a `ddk.Header` or `ddk.Sidebar`.

Keyword arguments:
- children (a list of or a singular dash component, string or number; optional): The list of components that are children of the CollapsibleMenu container.
Children of CollapsibleMenu should be of type (`dcc.Link`, `html.A`).
Nested `CollapsibleMenu` children are not supported at the moment.
- id (string; optional): The ID of this component, used to identify Dash components
in callbacks. The ID needs to be unique across all of the
components in an app.
- title (a list of or a singular dash component, string or number; optional): The top-level title (label) of the Collapsible Menu
- default_open (boolean; optional): Determines whether the submenu should be open on load
- self_collapsing (boolean; optional): Determines whether the submenu collapses when another submenu is clicked
- setProps (boolean | number | string | dict | list; optional): Dash-assigned callback that gets fired when the value changes."""
    @_explicitize_args
    def __init__(self, children=None, id=Component.UNDEFINED, title=Component.UNDEFINED, default_open=Component.UNDEFINED, self_collapsing=Component.UNDEFINED, **kwargs):
        self._prop_names = ['children', 'id', 'title', 'default_open', 'self_collapsing', 'setProps']
        self._type = 'CollapsibleMenu'
        self._namespace = 'dash_design_kit'
        self._valid_wildcard_attributes =            []
        self.available_properties = ['children', 'id', 'title', 'default_open', 'self_collapsing', 'setProps']
        self.available_wildcard_properties =            []

        _explicit_args = kwargs.pop('_explicit_args')
        _locals = locals()
        _locals.update(kwargs)  # For wildcard attrs
        args = {k: _locals[k] for k in _explicit_args if k != 'children'}

        for k in []:
            if k not in args:
                raise TypeError(
                    'Required argument `' + k + '` was not specified.')
        super(CollapsibleMenu, self).__init__(children=children, **args)
