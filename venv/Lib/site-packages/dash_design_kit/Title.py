# AUTO GENERATED FILE - DO NOT EDIT

from dash.development.base_component import Component, _explicitize_args


class Title(Component):
    """A Title component.
A styled div meant to be placed in a `ddk.Header` or a `ddk.Sidebar`

Keyword arguments:
- children (a list of or a singular dash component, string or number; optional): The title's content. This is usually just a string.
- id (string; optional): The ID of this component, used to identify Dash components
in callbacks. The ID needs to be unique across all of the
components in an app.
- allow_hidden_in_header (boolean; default True): If `True`, then the title will disappear on smaller screens when
there isn't enough room.
If `False`, then the title will disappear _word-by-word_ when there
isn't enough room.
- capitalization (a value equal to: 'lowercase', 'uppercase', 'capitalize'; optional): The text capitalization of the title. 'lowercase' will transform all
characters to lowercase, 'uppercase' will be all caps, and 'capitalize' will follow
"title case" capitalization (the first character of each word will be
uppercase)
- style (dict; optional): The style of the outermost div of the Title component
- className (string; optional): Additional class names for the outermost div of the Title component"""
    @_explicitize_args
    def __init__(self, children=None, id=Component.UNDEFINED, allow_hidden_in_header=Component.UNDEFINED, capitalization=Component.UNDEFINED, style=Component.UNDEFINED, className=Component.UNDEFINED, **kwargs):
        self._prop_names = ['children', 'id', 'allow_hidden_in_header', 'capitalization', 'style', 'className']
        self._type = 'Title'
        self._namespace = 'dash_design_kit'
        self._valid_wildcard_attributes =            []
        self.available_properties = ['children', 'id', 'allow_hidden_in_header', 'capitalization', 'style', 'className']
        self.available_wildcard_properties =            []

        _explicit_args = kwargs.pop('_explicit_args')
        _locals = locals()
        _locals.update(kwargs)  # For wildcard attrs
        args = {k: _locals[k] for k in _explicit_args if k != 'children'}

        for k in []:
            if k not in args:
                raise TypeError(
                    'Required argument `' + k + '` was not specified.')
        super(Title, self).__init__(children=children, **args)
